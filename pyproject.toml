[tool.poetry]
name = "stapp-groq-models-chat"
version = "0.1.0"
description = "Groq APIを使用したモデル情報表示とチャットボット機能を提供。OpenAIライブラリとの互換性を活用"
authors = ["Shogo Ogami <sg.tao.so@gmail.com>"]
license = "MIT License"
readme = "README.md"
package-mode = false

[tool.poetry.dependencies]
python = "^3.11"
streamlit = "^1.35.0"
langchain = "^0.3.9"
openai = "^1.55.3"
langchain-core = "^0.3.21"
chardet = "^5.2.0"
streamlit-paste-button = "^0.1.2"


[tool.poetry.group.dev.dependencies]
pytest = "^8.2.2"
taskipy = "^1.13.0"
flake8 = "^7.1.0"
black = "^24.4.2"
pytest-cov = "^5.0.0"

[build-system]
requires = ["poetry-core"]
build-backend = "poetry.core.masonry.api"

[tool.taskipy.tasks]
run  = "streamlit run src/main.py"
test = "pytest tests"
test-cov = "pytest tests --cov --cov-branch -svx"
test-report = "pytest tests --cov --cov-report=html"
format = "black --line-length 79 src"
lint = "flake8 src"
check-format = { cmd = "task format && task lint", help = "run lint check after format" }
export-requirements = { cmd = "poetry export -f requirements.txt -o requirements.txt --without-hashes", help = "export requirements.txt file" }
export-req-with-dev = { cmd = "poetry export -f requirements.txt -o requirements-dev.txt --without-hashes --with dev", help = "export requirements-dev.txt file" }
